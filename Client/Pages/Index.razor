@page "/"
@using BlazorApp.Shared
@inject HttpClient Http
@inject IMarkerFactory MarkerFactory

<PageTitle>PeaksHunters</PageTitle>

<Map @ref="mapRef" MapOptions="@mapOptions"></Map>

<style>
    #mapId {
        height: 100%;
        width: 100%;
        position: fixed;
    }
</style>

@code {
    private Peak[] peaks = new Peak[]{};
    private Map mapRef;
    private MapOptions mapOptions = new MapOptions()
    {
        DivId = "mapId",
        Center = new LatLng(63.4010888, 13.0822241),
        Zoom = 10,
        UrlTileLayer = "https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",
	SubOptions = new MapSubOptions()
        {
            Attribution = "&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a>,  <a href='https://opentopomap.org/credits'>OpenTopoMap</a>",
            TileSize = 256,
            ZoomOffset = 0,
            MaxZoom = 18,
        }
    };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            peaks = await Http.GetFromJsonAsync<Peak[]>("/api/Peaks") ?? new Peak[]{};
            foreach (Peak peak in peaks){
                var marker = await MarkerFactory.CreateAndAddToMap(new LatLng(peak.location.coordinates[1], peak.location.coordinates[0]), mapRef);
                await marker.BindTooltip(peak.name);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
